###########################################################################
#                                                                         # 
#               DATOS TERMOQUIMICOS DE ESPECIES INVOLUCRADAS              #
#               EN UNA REACCION DE COMBUSTIBLE SOLIDO DE AZUCAR           #
#                                                                         #
###########################################################################


import numpy as np
import scipy as sc


R = 8.31446261815324

############################ Azucar C12H22O11 ############################   

dataSolid = np.array([
    [288.15,408.5],[293.15,416.6],[297.00,422.5],[298.15,424.3],
    [298.15,425.5],[298.15,424.3],[300.00,430],[303.15,429.4],
    [308.15,437.5],[313.15,445.5],[318.15,451],[323.15,466.2],
    [328.15,472.6],[333.15,482.5],[338.15,490.3],[343.15,498.8],
    [348.15,506.7],[353.15,513.9],[358.15,522]
    ])

dataLiquid = np.array([
    [360.00,779.17],[370.00,790.27],[380.00,801.37],[390.00,812.47],
    [400.00,823.57],[410.00,834.67],[420.00,845.77],[424.00,850.21],
    [430.00,856.87],[440.00,867.97],[450.00,879.07],[460.00,890.17],
    [470.00,901.27],[480.00,912.37],[490.00,923.47],[500.00,934.57],
    [510.00,945.67],[520.00,956.77],[530.00,967.87]
    ])

dataLG = np.array([[530.00,967.87],[1290.10,970.7108935855377]])

dataGas = np.array([
    [1290.10,970.7108935855377],[1372.21,998.8528921577288],
    [1454.32,1028.3018130757098],[1536.42,1060.0125129897892],
    [1618.53,1094.9398485502763],[1700.64,1134.038676407481],
    [1782.75,1178.263853211713]
    ])

dataTemps = np.append(np.append(np.append(dataSolid[:,0],dataLiquid[:,0]),dataLG[:,0]),dataGas[:,0])
dataCps = np.append(np.append(np.append(dataSolid[:,1],dataLiquid[:,1]),dataLG[:,1]),dataGas[:,1])

hfC12H22O11s = -2221200     #Entalpias de Formacion J/mol T = 298K
hfC12H22O11g = -19174100


def cpC12H22O11(T):

    def lstq(temp,C1,C2):
            return C1*temp+C2

    if 288 <= T < 360:
        ctes, reds = sc.optimize.curve_fit(lstq,dataSolid[:,0],dataSolid[:,1])
        cp = lstq(T,ctes[0],ctes[1])

    if 360 <= T < 530:
        ctes, reds = sc.optimize.curve_fit(lstq,dataLiquid[:,0],dataLiquid[:,1])
        cp = lstq(T,ctes[0],ctes[1])

    if 530 < T < 1290:
        ctes, reds = sc.optimize.curve_fit(lstq,dataLG[:,0],dataLG[:,1])
        cp = lstq(T,ctes[0],ctes[1])
    
    if 1290 <= T <= 1783:
        ctes, reds = sc.optimize.curve_fit(lstq,dataGas[:,0],dataGas[:,1])
        cp = lstq(T,ctes[0],ctes[1])

    return cp


############################ Nitrato Potasico KNO3 ############################   

hfKNO3g = -315833     #Entalpias de Formacion J/mol T = 298K
hfKNO3s = -494500 

def cpKNO3(T):
    
    if 200 <= T < 1000:
        a1 = 4.6266124
        a2 = 0.012042296
        a3 = 5.33589*10**-6
        a4 = -1.98979*10**-8
        a5 = 9.90068*10**-12
        cp = (a1 + a2*T + a3*T**2 + a4*T**3 + a5*T**4)

    if 1000 <= T < 6000:
        a1 = 9.83342547
        a2 = 0.003249498
        a3 = -1.28264*10**-6
        a4 = 2.21147*10**-10
        a5 = -1.38802*10**-14
        cp = (a1 + a2*T + a3*T**2 + a4*T**3 + a5*T**4)
        
    return cp


############################ Dioxido de Carbono CO2 ############################

hfCO2g = -393510     #Entalpias de Formacion J/mol T = 298K

def cpCO2(T):

    if 200 <= T < 1000: 
        a1 = 2.356813
        a2 = 0.00898413
        a3 = -7.12206*10**-6
        a4 = 2.4573*10**-9
        a5 = -1.42885*10**-13
        cp = (a1 + a2*T + a3*T**2 + a4*T**3 + a5*T**4)

    if 1000 <= T <= 6000: 
        a1 = 4.6365111
        a2 = 0.002741457
        a3 = -9.95898*10**-7
        a4 = 1.60387*10**-10
        a5 = -9.16199*10**-15
        cp = (a1 + a2*T + a3*T**2 + a4*T**3 + a5*T**4)
        
    return cp


############################ Monoxido de Carbono CO ############################

hfCOg = -110533     #Entalpias de Formacion J/mol T = 298K

def cpCO(T):

    if 200 <= T < 1000: 
        a1 = 3.5795335
        a2 = -0.000610354
        a3 = 1.01681*10**-6
        a4 = 9.07066*10**-10
        a5 = -9.04424*10**-13
        cp = (a1 + a2*T + a3*T**2 + a4*T**3 + a5*T**4)

    if 1000 <= T <= 6000: 
        a1 = 3.0484859
        a2 = 0.001351728
        a3 = -4.85794*10**-7
        a4 = 7.88536**-11
        a5 = -4.69807*10**-15
        cp = (a1 + a2*T + a3*T**2 + a4*T**3 + a5*T**4)
        
    return cp


############################ Agua H2O ############################

hfH2Og = -241826     #Entalpias de Formacion J/mol T = 298K

def cpH2O(T):

    if 200 <= T < 1000: 
        a1 = 4.1986352
        a2 = -0.002036402
        a3 = 6.52034*10**-6
        a4 = -5.48793*10**-9
        a5 = 1.77197*10**-12
        cp = (a1 + a2*T + a3*T**2 + a4*T**3 + a5*T**4)

    if 1000 <= T <= 6000: 
        a1 = 2.6770389
        a2 = 0.002973182
        a3 = -7.73769*10**-7
        a4 = 9.44335**-11
        a5 = -4.269*10**-15
        cp = (a1 + a2*T + a3*T**2 + a4*T**3 + a5*T**4)
        
    return cp


############################ Hidrogeno H2 ############################

hfH2g = 0     #Entalpias de Formacion J/mol T = 298K

def cpH2(T):

    if 200 <= T < 1000: 
        a1 = 2.3443029
        a2 = 0.007980425
        a3 = -0.000019477917
        a4 = 0.000000020156967
        a5 = -0.0000000000073760289
        cp = (a1 + a2*T + a3*T**2 + a4*T**3 + a5*T**4)

    if 1000 <= T <= 6000: 
        a1 = 2.9328305
        a2 = 0.000826598
        a3 = -0.00000014640057
        a4 = 0.000000000015409851
        a5 = -6.8879615*10**-15
        cp = (a1 + a2*T + a3*T**2 + a4*T**3 + a5*T**4)
        
    return cp


############################ Nitrogeno N2 ############################

hfN2g = 0     #Entalpias de Formacion J/mol T = 298K

def cpN2(T):

    if 200 <= T < 1000: 
        a1 = 3.53100528
        a2 = -0.000123660988
        a3 = -0.000000502999433
        a4 = 0.00000000243530612
        a5 = -1.40881235*10**-12
        cp = (a1 + a2*T + a3*T**2 + a4*T**3 + a5*T**4)

    if 1000 <= T <= 6000: 
        a1 = 2.95257637
        a2 = 0.0013969004
        a3 = -0.000000492631603
        a4 = 0.0000000000786010195
        a5 = -4.60755204*10**-15
        cp = (a1 + a2*T + a3*T**2 + a4*T**3 + a5*T**4)
        
    return cp


############################ Carbonato Potasico K2CO3 ############################

hfK2CO3s = -1150180     #Entalpias de Formacion J/mol T = 298K
hfK2CO3l = -1130610

def cpK2CO3(T):

    if 298 <= T < 1174: 
        a1 = 97.08093
        a2 = 94.22326
        a3 = -2.053291
        a4 = 0.709644
        a5 = -0.947860
        cp = (a1 + a2*(T/1000) + a3*(T/1000)**2 + a4*(T/1000)**3 + a5/((T/1000)**2)) #Shomate Equation

    if 1174 <= T <= 6000: 
        a1 = 209.2
        a2 = -1.629015*10**-7
        a3 = 8.009850*10**-8
        a4 = -1.336428*10**-8
        a5 = -2.105289*10**-8
        cp = (a1 + a2*(T/1000) + a3*(T/1000)**2 + a4*(T/1000)**3 + a5/((T/1000)**2)) #Shomate Equation
        
    return cp


############################ Carbonato Potasico KOH ############################

hfKOHs = -424720     #Entalpias de Formacion J/mol T = 298K
hfKOHl = -412710
hfKOHg = -232630

def cpKOH(T):

    if 298 <= T < 516: 
        a1 = 80.78258	
        a2 = -112.2329
        a3 = 301.1543	
        a4 = -147.9923	
        a5 = -0.468867	
        cp = (a1 + a2*(T/1000) + a3*(T/1000)**2 + a4*(T/1000)**3 + a5/((T/1000)**2)) #Shomate Equation

    if 516 <= T < 679: 
        a1 = 78.65920
        a2 = 0
        a3 = 0
        a4 = 0
        a5 = 0
        cp = (a1 + a2*(T/1000) + a3*(T/1000)**2 + a4*(T/1000)**3 + a5/((T/1000)**2)) #Shomate Equation

    if 679 <= T < 2000:
        a1 = 83.10721
        a2 = -2.329778*10**-9
        a3 = 1.884198*10**-9
        a4 = -4.813735*10**-10
        a5 = -3.556267*10**-11
        cp = (a1 + a2*(T/1000) + a3*(T/1000)**2 + a4*(T/1000)**3 + a5/((T/1000)**2)) #Shomate Equation

    if 2000<= T <= 6000:
        a1 = 49.48500
        a2 = 7.051337
        a3 = -1.412548
        a4 = 0.097243
        a5 = -0.245887
        cp = (a1 + a2*(T/1000) + a3*(T/1000)**2 + a4*(T/1000)**3 + a5/((T/1000)**2)) #Shomate Equation
        
    return cp